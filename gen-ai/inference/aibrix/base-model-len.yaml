apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    model.aibrix.ai/name: $MODEL # Note: The label value `model.aibrix.ai/name` here must match with the service name.
    model.aibrix.ai/port: "8000"
    adapter.model.aibrix.ai/enabled: "true"
  name: $MODEL
spec:
  replicas: 1
  selector:
    matchLabels:
      model.aibrix.ai/name: $MODEL
  template:
    metadata:
      labels:
        model.aibrix.ai/name: $MODEL
    spec:
      initContainers:
      - name: init-model
        image: aibrix/runtime:v0.2.1
        command:
          - aibrix_download
          - --model-uri
          - $S3_MODEL_PATH
          - --local-dir
          - /models/
        env:
          - name: DOWNLOADER_MODEL_NAME
            value: $MODEL
          - name: DOWNLOADER_NUM_THREADS
            value: "16"
          - name: DOWNLOADER_ALLOW_FILE_SUFFIX
            value: json, safetensors, py
          - name: AWS_ENDPOINT_URL
            value: $AWS_S3_ENDPOINT_URL
          - name: AWS_REGION
            value: $AWS_REGION
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: access_key
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: secret_key
        volumeMounts:
          - mountPath: /dev/shm
            name: shared-mem
          - mountPath: /models
            name: models
      containers:
        - command:
            - python3
            - -m
            - vllm.entrypoints.openai.api_server
            - --host
            - "0.0.0.0"
            - --port
            - "8000"
            - --max-model-len
            - "$MAX_MODEL_LEN"
            - --uvicorn-log-level
            - warning
            - --model
            - $MODEL_ID
            - --tensor-parallel-size
            - "$PARALLEL_SIZE"
            - --gpu-memory-utilization
            - "$GPU_MEMORY_UTILIZATION"
            - --api-key
            - $API_KEY
            - --served-model-name
            # Note: The `--served-model-name` argument value must also match the Service name and the Deployment label `model.aibrix.ai/name`
            - $MODEL
            - --enable-lora
          image: vllm/vllm-openai:v0.7.3
          imagePullPolicy: Always
          name: vllm-openai
          env:
            - name: VLLM_ALLOW_RUNTIME_LORA_UPDATING
              value: "True"
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            limits:
              nvidia.com/gpu: "$GPU_COUNT"
            requests:
              nvidia.com/gpu: "$GPU_COUNT"
          volumeMounts:
            - mountPath: /dev/shm
              name: shared-mem
            - mountPath: /models
              name: models
        - name: aibrix-runtime
          image: aibrix/runtime:v0.2.1
          command:
            - aibrix_runtime
            - --port
            - "8080"
          env:
            - name: INFERENCE_ENGINE
              value: vllm
            - name: INFERENCE_ENGINE_ENDPOINT
              value: http://localhost:8000
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /dev/shm
              name: shared-mem
            - mountPath: /models
              name: models
      volumes:
        - name: shared-mem
          emptyDir:
            medium: Memory
        - name: models
          hostPath:
            path: /mnt/k8s-disks/0/aibrix
            type: DirectoryOrCreate
      nodeSelector:
        NodeGroupType: $NODE_GROUP_TYPE
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"

---

apiVersion: v1
kind: Service
metadata:
  labels:
    model.aibrix.ai/name: $MODEL
    prometheus-discovery: "true"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
  name: $MODEL # Note: The Service name must match the label value `model.aibrix.ai/name` in the Deployment
spec:
  ports:
    - name: serve
      port: 8000
      protocol: TCP
      targetPort: 8000
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    model.aibrix.ai/name: $MODEL
  type: ClusterIP
